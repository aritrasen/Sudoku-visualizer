{"version":3,"sources":["serviceWorker.js","styles/GlobalStyle.js","styles/Content.js","styles/Title.js","styles/Card.js","styles/BlockContainer.js","styles/InputContainer.js","redux/action.js","hooks/useKeypress.js","hooks/useOnClickOutside.js","components/Block.js","styles/Container.js","styles/Row.js","components/Grid.js","styles/theme.js","utils/shuffle.js","utils/checkRow.js","utils/checkSquare.js","utils/checkCol.js","utils/createNewGrid.js","utils/solveGridSol.js","utils/removeElems.js","redux/reducer.js","redux/store.js","utils/backTrack.js","styles/Button.js","styles/DummyButton.js","styles/SideMessage.js","components/Backtrack.js","index.js"],"names":["Boolean","window","location","hostname","match","GlobalStyle","createGlobalStyle","theme","css","colors","background","black","Content","styled","div","Title","h1","Card","white","BlockContainer","props","chosen","lightBlue","isPuzzle","transition","Input","input","createGrid","type","useKeyPress","targetKey","useState","keyPressed","setKeyPressed","downHandler","key","upHandler","useEffect","addEventListener","removeEventListener","useOnClickOutside","ref","handler","listener","event","current","contains","target","document","Block","rowIndex","colIndex","isInputActive","setIsInputActive","inputValue","setInputValue","useRef","val","useSelector","state","grid","solVal","solGrid","activeRow","activeCol","isEditable","selected","console","log","dispatch","useDispatch","enter","useKeypress","esc","payload","row","col","value","onChange","e","parseInt","onClick","Container","Row","blue","Grid","create","useCallback","Array","map","_","shuffle","a","i","length","j","Math","floor","random","checkRow","rowIdx","includes","checkSquare","colIdx","startR","startC","checkCol","fill","createNewGrid","backtrackNewGrid","index","onenine","vals","solveGridSol","counter","pos","count","removeElems","positions","backup","reducer","action","fullGrid","newGrid","slice","gridNew","alert","newListCount","listCount","configureStore","intialState","store","createStore","devToolsEnhancer","backTrack","arr","push","Button","button","colorDisabled","fontColor","DummyButton","SideMessage","Backtrack","status","setStatus","guidelineFlag","setGuidelineFlag","Fragment","lists","actionLists","setTimeout","myListDispatch","disabled","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.1294e82d.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import { createGlobalStyle, css } from 'styled-components'\r\n\r\nconst GlobalStyle =  createGlobalStyle`\r\n  ${({ theme }) => css`\r\n    html {\r\n      height: 100%;\r\n\r\n      body {\r\n        display: flex;\r\n        flex-direction: column;\r\n        height: 100%;\r\n        margin: 0;\r\n\r\n        #root {\r\n          background: ${theme.colors.background};\r\n          color: ${theme.colors.black};\r\n          display: flex;\r\n          font-family: sans-serif;\r\n          height: 100%;\r\n          justify-content: center;\r\n          padding: 15px;\r\n        }\r\n      }\r\n    }\r\n  `}\r\n`\r\nexport default GlobalStyle;","import styled from 'styled-components'\r\n\r\nconst Content = styled.div`\r\n  max-width: 500px;\r\n  display: flex;\r\n  flex: 1;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n`\r\n\r\nexport default Content;\r\n","import styled, { css } from 'styled-components'\r\n\r\nconst Title = styled.h1`\r\n  ${({ theme }) => css`\r\n    color: ${theme.colors.black};\r\n    margin-top: 0;\r\n    text-align: center;\r\n  `}\r\n`\r\nexport default Title;","import styled, { css } from 'styled-components'\r\n\r\nconst Card = styled.div`\r\n  ${({ theme }) => css`\r\n    background-color: ${theme.colors.white};\r\n    border-radius: 15px;\r\n    display: flex;\r\n    flex: 1;\r\n    flex-direction: column;\r\n    max-height: fit-content;\r\n    padding: 15px;\r\n  `}\r\n`\r\n\r\nexport default Card;\r\n","import styled, { css } from 'styled-components'\r\n\r\nconst BlockContainer = styled.div`\r\n  ${({ theme }) => css`\r\n    align-items: center;\r\n    background-color: ${(props) => props.chosen ?  theme.colors.lightBlue: theme.colors.white };\r\n    border: solid 1px ${theme.colors.black};\r\n    cursor: pointer;\r\n    display: flex;\r\n    flex-grow: 1;\r\n    flex-shrink: 0;\r\n    flex-basis: 0;\r\n    font-size: 20px;\r\n    font-weight:  ${(props) => props.isPuzzle ?  \"Bold\": \"Normal\" };\r\n    height: auto;\r\n    justify-content: center;\r\n    transition: ${theme.transition};\r\n    user-select: none;\r\n\r\n    &:before {\r\n      padding-top: 100%;\r\n      content: '';\r\n      float: left;\r\n    }\r\n\r\n    &:hover {\r\n      background-color: ${theme.colors.lightBlue};\r\n    }\r\n  `}\r\n`\r\nexport default BlockContainer;","import styled, { css } from 'styled-components'\r\n\r\nconst Input = styled.input`\r\n${({ theme }) => css`\r\nbackground-color: ${theme.colors.white};\r\nborder: solid 1px ${theme.colors.black};\r\nheight:50px;\r\nwidth:50px;\r\nfont-size: 20px;\r\ndisplay: flex;\r\nfont-weight: bold;\r\nheight: auto;\r\ntransition: ${theme.transition};\r\nuser-select: no\r\n`}\r\n`\r\nexport default Input;","const createGrid = () => ({ type: \"CREATE_GRID\" });\r\nconst changeGrid = (props) => ({\r\n  type: \"CHANGE_GRID\",\r\n  payload: { row: props.row, col: props.col, val: props.val },\r\n});\r\nconst solveGrid = (props) => ({\r\n  type: \"BACKTRACK\",\r\n  payload: { row: props.row, col: props.col, val: props.val },\r\n});\r\n\r\nconst createBacktrackActionListCount = (props) => ({\r\n  type: \"CREATE_ACTION_LIST_COUNT\",\r\n  payload: { listCount: props },\r\n});\r\n\r\nexport default createGrid;\r\nexport { changeGrid };\r\nexport { solveGrid };\r\nexport { createBacktrackActionListCount, createGrid };\r\n","// hook from https://usehooks.com/useKeyPress/\r\nimport { useState, useEffect } from \"react\";\r\n\r\n// Hook\r\nfunction useKeyPress(targetKey) {\r\n  // State for keeping track of whether key is pressed\r\n  const [keyPressed, setKeyPressed] = useState(false);\r\n\r\n  // If pressed key is our target key then set to true\r\n  function downHandler({ key }) {\r\n    if (key === targetKey) {\r\n      setKeyPressed(true);\r\n    }\r\n  }\r\n\r\n  // If released key is our target key then set to false\r\n  const upHandler = ({ key }) => {\r\n    if (key === targetKey) {\r\n      setKeyPressed(false);\r\n    }\r\n  };\r\n\r\n  // Add event listeners\r\n  useEffect(() => {\r\n    window.addEventListener(\"keydown\", downHandler);\r\n    window.addEventListener(\"keyup\", upHandler);\r\n    // Remove event listeners on cleanup\r\n    return () => {\r\n      window.removeEventListener(\"keydown\", downHandler);\r\n      window.removeEventListener(\"keyup\", upHandler);\r\n    };\r\n  }, []); // Empty array ensures that effect is only run on mount and unmount\r\n\r\n  return keyPressed;\r\n}\r\n\r\nexport default useKeyPress;","import { useState, useEffect} from 'react';\r\n\r\nfunction useOnClickOutside(ref, handler) {\r\n\r\n    useEffect(\r\n  \r\n      () => {\r\n  \r\n        const listener = event => {\r\n  \r\n          // Do nothing if clicking ref's element or descendent elements\r\n  \r\n          if (!ref.current || ref.current.contains(event.target)) {\r\n  \r\n            return;\r\n  \r\n          }\r\n  \r\n  \r\n  \r\n          handler(event);\r\n  \r\n        };\r\n  \r\n  \r\n  \r\n        document.addEventListener('mousedown', listener);\r\n  \r\n        document.addEventListener('touchstart', listener);\r\n  \r\n  \r\n  \r\n        return () => {\r\n  \r\n          document.removeEventListener('mousedown', listener);\r\n  \r\n          document.removeEventListener('touchstart', listener);\r\n  \r\n        };\r\n  \r\n      },\r\n  \r\n      // Add ref and handler to effect dependencies\r\n  \r\n      // It's worth noting that because passed in handler is a new ...\r\n  \r\n      // ... function on every render that will cause this effect ...\r\n  \r\n      // ... callback/cleanup to run every render. It's not a big deal ...\r\n  \r\n      // ... but to optimize you can wrap handler in useCallback before ...\r\n  \r\n      // ... passing it into this hook.\r\n  \r\n      [ref, handler]\r\n  \r\n    );\r\n  \r\n  }\r\n\r\n  export default useOnClickOutside;","import React,{useState,useEffect,useRef} from 'react'\r\nimport BlockContainer from '../styles/BlockContainer'\r\nimport Input from '../styles/InputContainer'\r\nimport { useSelector } from 'react-redux'\r\nimport { useDispatch } from 'react-redux'\r\nimport {changeGrid} from '../redux/action'\r\nimport useKeypress from '../hooks/useKeypress'\r\nimport useOnClickOutside from '../hooks/useOnClickOutside'\r\n\r\nconst Block = ({ rowIndex, colIndex }) => {\r\n  const [isInputActive, setIsInputActive] = useState(false)\r\n  const [inputValue, setInputValue] = useState(\"\")\r\n  const ref = useRef()\r\n  const val = useSelector(state=> state.grid? state.grid[rowIndex][colIndex]:0)\r\n  const solVal = useSelector(state=> state.solGrid? state.solGrid[rowIndex][colIndex]:1)\r\n  const activeRow = useSelector(state => state.activeRow)\r\n  const activeCol = useSelector(state => state.activeCol)\r\n  const isEditable = solVal===0\r\n  const selected = activeRow===rowIndex&&activeCol===colIndex\r\n  console.log(\"row\",rowIndex,\"col\",colIndex,\"edit\",isEditable)\r\n  console.log(\"activeRow\", activeRow, \"activeCol\",activeCol,\"selected\",selected)\r\n  const dispatch = useDispatch()\r\n  const enter = useKeypress('Enter');\r\n  const esc = useKeypress('Escape');\r\n  useOnClickOutside(ref, () => setIsInputActive(false))\r\n  useEffect(() => {\r\n\r\n    if (isInputActive) {\r\n\r\n      // if Enter is pressed, save the text and case the editor\r\n\r\n      if (enter) {\r\n\r\n        \r\n        dispatch(changeGrid({row:rowIndex,col:colIndex, val:inputValue}))\r\n        setIsInputActive(false);\r\n\r\n      }\r\n\r\n      // if Escape is pressed, revert the text and close the editor\r\n\r\n      if (esc) {\r\n\r\n        \r\n\r\n        setIsInputActive(false);\r\n\r\n      }\r\n\r\n    }\r\n\r\n  }, [enter, esc]);\r\n  return isInputActive?<Input type='number' value={inputValue}\r\n\r\n  onChange={(e) => setInputValue(parseInt(e.target.value))}/>:<BlockContainer chosen = {selected} isPuzzle ={!isEditable} onClick= {()=>isEditable?setIsInputActive(!isInputActive): null}>{val===0 ? \"\":val}</BlockContainer>\r\n}\r\n\r\nexport default Block","import styled from 'styled-components'\r\n\r\nconst Container = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  margin: 10px 0;\r\n`\r\n\r\n\r\nexport default Container;","import styled, { css } from 'styled-components'\r\n\r\nconst Row = styled.div`\r\n  ${({ theme }) => css`\r\n    display: flex;\r\n    flex-flow: row;\r\n\r\n    &:nth-child(1) {\r\n      div {\r\n        border-top: solid 4px ${theme.colors.blue};\r\n      }\r\n    }\r\n    &:nth-child(3),\r\n    &:nth-child(6) {\r\n      div {\r\n        border-bottom: solid 3px ${theme.colors.blue};\r\n      }\r\n    }\r\n    &:nth-child(9) {\r\n      border-bottom: solid 4px ${theme.colors.blue};\r\n    }\r\n\r\n    div {\r\n      &:nth-child(1) {\r\n        border-left: solid 4px ${theme.colors.blue};\r\n      }\r\n      &:nth-child(3),\r\n      &:nth-child(6),\r\n      &:nth-child(9) {\r\n        border-right: solid 4px ${theme.colors.blue};\r\n      }\r\n      &:nth-child(4),\r\n      &:nth-child(7) {\r\n        border-left: none;\r\n      }\r\n    }\r\n  `}`\r\n\r\n  export default Row;","import React,{useCallback, useEffect} from 'react'\r\n\r\nimport Block from './Block'\r\nimport Container from '../styles/Container'\r\nimport Row from '../styles/Row'\r\nimport { useDispatch } from 'react-redux'\r\nimport createGrid from '../redux/action'\r\n\r\nconst Grid = ()=> {\r\n  // Other stuff on the way\r\n  console.log(\"I am being called\")\r\n  const dispatch = useDispatch()\r\n  const create = useCallback(() => dispatch(createGrid()),[dispatch])\r\n  useEffect(() => {\r\n    create()\r\n  })\r\n  return (\r\n    <Container>\r\n      {[...Array(9)].map((_, rowIndex) => (\r\n          <Row >\r\n            {[...Array(9)].map((_, colIndex) => (\r\n                <Block colIndex={colIndex} rowIndex={rowIndex} />\r\n              ))\r\n            }\r\n          </Row>\r\n        ))\r\n      }\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default Grid;","const theme = {\r\n    colors: {\r\n      background: 'radial-gradient(circle at 100%, #87CEFA, #87CEFA 50%, #eee 75%, #87CEFA 75%)',\r\n      black: '#282c34',\r\n      blue: '#a0e9fd',\r\n      lightBlue: '#caf3fe',\r\n      white: 'white',\r\n    },\r\n    transition: '0.01s',\r\n  }\r\n\r\nexport default theme;  ","function shuffle(a) {\r\n    for (let i = a.length - 1; i > 0; i--) {\r\n        const j = Math.floor(Math.random() * (i + 1));\r\n        [a[i], a[j]] = [a[j], a[i]];\r\n    }\r\n    return a;\r\n}\r\n\r\nexport default shuffle;","function checkRow(grid,rowIdx,val)\r\n{\r\n     return !grid[rowIdx].includes(val)\r\n}\r\n\r\nexport default checkRow;","function checkSquare(grid,rowIdx,colIdx,val)\r\n{\r\n       let startR = Math.floor(rowIdx/3)*3\r\n       let startC= Math.floor(colIdx/3)*3\r\n       for(let i=0; i<=2; i++)\r\n       for(let j=0; j<=2; j++)\r\n       {\r\n            if(grid[startR+i][startC+j]===val)\r\n              return false\r\n       }\r\n\r\n       return true\r\n}\r\n\r\nexport default checkSquare;","function checkCol(grid,colIdx,val)\r\n{    \r\n     const col = Array(9).fill(0)\r\n     for(let i=0; i<9;i++)\r\n       col[i] = grid[i][colIdx]\r\n     return !col.includes(val) \r\n}\r\n\r\nexport default checkCol;","import shuffle from './shuffle'\r\nimport checkRow from './checkRow'\r\nimport checkSquare from './checkSquare'\r\nimport checkCol from './checkCol'\r\n\r\nfunction backtrackNewGrid(grid, index)\r\n{    if(index===81)\r\n        return true; \r\n     //console.log(index)\r\n     const onenine = Array(9).fill(0)\r\n     //console.log(\"back tracking\")\r\n     for (let i = 0; i <9; i++) {\r\n           onenine[i]= i+1\r\n           //console.log(vals[i])\r\n        }\r\n     const vals = shuffle(onenine)   \r\n     const row = Math.floor(index/9)\r\n     const col = index%9 \r\n     \r\n    \r\n               \r\n     for(let i=0; i<vals.length; i++)\r\n     {\r\n         \r\n         \r\n\r\n          if(checkCol(grid,col,vals[i])&&checkRow(grid,row,vals[i])&&checkSquare(grid,row,col,vals[i]))\r\n          {\r\n           //if(row===1&&col===0)\r\n             //console.log(\"check\"+grid[0][0]+grid[0][1]+grid[0][2]+grid[0][3]+vals[i])\r\n\r\n          grid[row][col] = vals[i]\r\n          if(backtrackNewGrid(grid,index+1))\r\n               return true\r\n          grid[row][col] =0     \r\n          }     \r\n     }\r\n      \r\n    return false\r\n}\r\n\r\nfunction createNewGrid()\r\n{\r\n     const grid =  [...Array(9)].map( ()=> [...Array(9).fill(0)])\r\n     backtrackNewGrid(grid,0)\r\n     return grid\r\n\r\n}\r\n\r\nexport default createNewGrid;","import checkRow from './checkRow'\r\nimport checkSquare from './checkSquare'\r\nimport checkCol from './checkCol'\r\n\r\nfunction solveGridSol(grid, index, counter)\r\n{     let pos = -1\r\n      for(let i= index; i<81; i++)\r\n      {\r\n          \r\n          const row = Math.floor(index/9) \r\n          const col = index%9\r\n          if(grid[row][col]===0)\r\n           {\r\n               pos = i\r\n               break\r\n           }    \r\n           \r\n      }\r\n      if(pos===-1)\r\n      {\r\n         counter.count++\r\n         return\r\n      }\r\n      const row = Math.floor(pos/9) \r\n      const col = pos%9\r\n      \r\n\r\n    for(let i=1; i<=9; i++)\r\n    {\r\n          if(checkCol(grid,col,i)&&checkRow(grid,row,i)&&checkSquare(grid,row,col,i))\r\n          {\r\n              grid[row][col] = i;\r\n              solveGridSol(grid,index+1,counter)\r\n              if(counter.count===2)\r\n                 break\r\n              grid[row][col] = 0\r\n          }\r\n    }    \r\n\r\n}\r\n\r\nexport default solveGridSol;","import shuffle from './shuffle'\r\nimport solveGridSol from './solveGridSol'\r\nfunction removeElems(grid)\r\n{\r\n    const positions = Array(81).fill(0)\r\n     for (let i = 0; i <81; i++) {\r\n           positions[i]= i+1\r\n        }\r\n    shuffle(positions)\r\n    for(let i=0 ; i<81; i++)\r\n    {\r\n        const row = Math.floor(i/9)\r\n        const col = i%9\r\n        let backup = grid[row][col]\r\n        grid[row][col] = 0\r\n        const counter = {count:0}\r\n        solveGridSol(grid,i,counter)\r\n        if(counter.count===2)\r\n        {\r\n               grid[row][col] = backup\r\n        }\r\n\r\n\r\n    }\r\n    \r\n    return grid\r\n}\r\n\r\nexport default removeElems;","import createNewGrid from \"../utils/createNewGrid.js\";\r\nimport createGrid from \"./action.js\";\r\nimport removeElems from \"../utils/removeElems.js\";\r\nimport checkCol from \"../utils/checkCol.js\";\r\nimport checkRow from \"../utils/checkRow.js\";\r\nimport checkSquare from \"../utils/checkSquare.js\";\r\nfunction reducer(state = {}, action) {\r\n  switch (action.type) {\r\n    case \"CREATE_GRID\":\r\n      let fullGrid = createNewGrid();\r\n      let newGrid = removeElems(fullGrid);\r\n      return {\r\n        ...state,\r\n        grid: newGrid.slice().map(function (row) {\r\n          return row.slice();\r\n        }),\r\n        solGrid: newGrid.slice().map(function (row) {\r\n          return row.slice();\r\n        }),\r\n        activeRow: 9,\r\n        activeCol: 9,\r\n      };\r\n    case \"CHANGE_GRID\": {\r\n      let gridNew = [...state.grid];\r\n      let solGrid = [...state.solGrid];\r\n\r\n      let row = action.payload.row;\r\n      let col = action.payload.col;\r\n      let val = action.payload.val;\r\n      //console.log(action.payload.row);\r\n      if (val === 0) {\r\n        gridNew[row][col] = val;\r\n        //console.log(\"Action\", solGrid[row][col]);\r\n        return { ...state, grid: gridNew, solGrid: solGrid };\r\n      } else if (\r\n        checkCol(gridNew, col, val) &&\r\n        checkRow(gridNew, row, val) &&\r\n        checkSquare(gridNew, row, col, val)&&0<=val&&val<=9\r\n      ) {\r\n        gridNew[row][col] = val;\r\n        //console.log(\"Action\", solGrid[row][col]);\r\n        return {\r\n          ...state,\r\n          grid: gridNew,\r\n          solGrid: solGrid,\r\n          activeRow: 9,\r\n          activeCol: 9,\r\n        };\r\n      } else {\r\n        alert(\"Incorrect Option\");\r\n        return {\r\n          ...state,\r\n          grid: gridNew,\r\n          solGrid: solGrid,\r\n          activeRow: 9,\r\n          activeCol: 9,\r\n        };\r\n      }\r\n    }\r\n    case \"BACKTRACK\": {\r\n      let gridNew = state.grid.slice().map(function (row) {\r\n        return row.slice();\r\n      });\r\n      let solGrid = state.solGrid.slice().map(function (row) {\r\n        return row.slice();\r\n      });\r\n      let newListCount = state.listCount - 1;\r\n      let row = action.payload.row;\r\n      let col = action.payload.col;\r\n      let val = action.payload.val;\r\n      //console.log(action.payload.row);\r\n      gridNew[row][col] = val;\r\n      return {\r\n        ...state,\r\n        grid: gridNew,\r\n        solGrid: solGrid,\r\n        activeRow: row,\r\n        activeCol: col,\r\n        listCount: newListCount,\r\n      };\r\n    }\r\n    case \"CREATE_ACTION_LIST_COUNT\":\r\n      return {\r\n        ...state,\r\n        listCount: action.payload.listCount,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default reducer;\r\n","import {createStore,applyMiddleware} from 'redux'\r\nimport { devToolsEnhancer  } from 'redux-devtools-extension'\r\nimport reducer from './reducer'\r\n\r\n\r\nfunction configureStore(intialState={})\r\n{\r\n    const store = createStore(reducer, intialState,devToolsEnhancer())\r\n    return store\r\n}\r\n\r\nexport default configureStore;","import React,{useState,useEffect} from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { useDispatch } from 'react-redux'\r\nimport {changeGrid} from '../redux/action'\r\nimport checkRow from './checkRow'\r\nimport checkSquare from './checkSquare'\r\nimport checkCol from './checkCol'\r\n\r\nfunction backTrack(grid,index,arr)\r\n{\r\n    let pos = -1\r\n    \r\n    \r\n    for(let i= index; i<81; i++)\r\n    {\r\n        \r\n        let row = Math.floor(i/9) \r\n        let col = i%9\r\n\r\n        if(grid[row][col]===0)\r\n         {\r\n             pos = i\r\n             break\r\n         }    \r\n         \r\n    }\r\n    if(pos===-1)\r\n    {\r\n       return true\r\n    }\r\n    const row = Math.floor(pos/9) \r\n    const col = pos%9\r\n    \r\n\r\n  for(let i=1; i<=9; i++)\r\n  {\r\n        if(checkCol(grid,col,i)&&checkRow(grid,row,i)&&checkSquare(grid,row,col,i))\r\n        {\r\n            grid[row][col] = i\r\n            arr.push({row:row,col:col,val:i})\r\n            if(backTrack(grid,index+1,arr))\r\n            {\r\n                return true\r\n            }\r\n            else\r\n            {\r\n            grid[row][col] =0\r\n            arr.push({row:row,col:col,val:0})\r\n            }\r\n        }\r\n  }\r\n  return false    \r\n}\r\n\r\nexport default backTrack;","import styled, { css } from \"styled-components\";\r\n\r\nconst Button = styled.button`\r\n  ${({ theme, colorDisabled }) => css`\r\n    align-items: center;\r\n    background-color: ${\r\n      colorDisabled ? colorDisabled.background : theme.colors.black\r\n    };\r\n    border: 2px solid ${theme.colors.black};\r\n    border-radius: 4px;\r\n    color: ${colorDisabled ? colorDisabled.fontColor : theme.colors.white};\r\n    cursor: ${colorDisabled ? \"none\" : \"pointer\"};\r\n    display: flex;\r\n    flex; 1;\r\n    font-size: 16px;\r\n    font-weight: bold;\r\n    height: 40px;\r\n    justify-content: center;\r\n    margin: 4px 2px;\r\n    min-height: 40px;\r\n    opacity: 0.8;\r\n    padding: 0;\r\n    transition: ${theme.transition};\r\n\r\n    &:focus {\r\n      border-color: ${theme.colors.blue};\r\n      outline: none;\r\n    }\r\n\r\n    &:hover {\r\n      opacity: 0.6;\r\n    }\r\n  `}\r\n`;\r\nexport default Button;\r\n","import styled, { css } from \"styled-components\";\r\n\r\nconst DummyButton = styled.button`\r\n  ${({ theme }) => css`\r\n    align-items: center;\r\n    background-color: gray;\r\n    border: 2px solid ${theme.colors.black};\r\n    border-radius: 4px;\r\n    color: ${theme.colors.white};\r\n    display: flex;\r\n    flex: 1;\r\n    font-size: 16px;\r\n    font-weight: bold;\r\n    height: 40px;\r\n    justify-content: center;\r\n    margin: 4px 2px;\r\n    min-height: 40px;\r\n    max-width: 50%;\r\n    opacity: 0.8;\r\n    padding: 0;\r\n    transition: ${theme.transition};\r\n\r\n    &:focus {\r\n      border-color: ${theme.colors.blue};\r\n      outline: none;\r\n    }\r\n\r\n    &:hover {\r\n      opacity: 0.6;\r\n    }\r\n  `}\r\n`;\r\nexport default DummyButton;\r\n","import styled from \"styled-components\";\r\n\r\nconst SideMessage = styled.div`\r\n  max-width: auto;\r\n  display: flex;\r\n  flex: 1;\r\n  flex-direction: column;\r\n  border: 3px solid black(111, 41, 97);\r\n  color: black;\r\n  background-color: gray;\r\n  border-radius: 0.5em;\r\n  padding: 10px;\r\n  height: auto;\r\n  width: 300px;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n\r\nexport default SideMessage;\r\n","import React, { useState } from \"react\";\r\nimport backTrack from \"../utils/backTrack\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useSelector } from \"react-redux\";\r\nimport {\r\n  solveGrid,\r\n  createBacktrackActionListCount,\r\n  createGrid,\r\n} from \"../redux/action\";\r\n\r\nimport Button from \"../styles/Button\";\r\nimport Row from \"../styles/Row\";\r\nimport DummyButton from \"../styles/DummyButton\";\r\nimport SideMessage from \"../styles/SideMessage\";\r\n\r\nfunction myListDispatch(grid, dispatch) {\r\n  const delay = 6;\r\n  const lists = [];\r\n  backTrack(grid, 0, lists);\r\n  const actionLists = lists.map((a) => solveGrid(a));\r\n  dispatch(createBacktrackActionListCount(actionLists.length));\r\n  for (let i = 0; i < actionLists.length; i++) {\r\n    setTimeout(() => dispatch(actionLists[i]), delay);\r\n  }\r\n}\r\n\r\nfunction createNewGrid(grid, dispatch) {\r\n  dispatch(createGrid());\r\n}\r\n\r\nconst Backtrack = () => {\r\n  const [status, setStatus] = useState(\"Solve\");\r\n  const [guidelineFlag, setGuidelineFlag] = useState(false);\r\n  const dispatch = useDispatch();\r\n  const grid = useSelector((state) =>\r\n    state.grid\r\n      ? state.grid.slice().map(function (row) {\r\n          return row.slice();\r\n        })\r\n      : null\r\n  );\r\n  let listCount = useSelector((state) => state.listCount);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Button\r\n        onClick={() => {\r\n          setStatus(\"Solving...\");\r\n          myListDispatch(grid, dispatch);\r\n        }}\r\n        disabled={listCount > 0}\r\n        colorDisabled={\r\n          listCount > 0 ? { background: \"#D3D3D3\", fontColor: \"#808080\" } : null\r\n        }\r\n      >\r\n        {listCount === 0 ? \"Solved!\" : status}\r\n      </Button>\r\n      <Button\r\n        disabled={listCount > 0}\r\n        colorDisabled={\r\n          listCount > 0 ? { background: \"#D3D3D3\", fontColor: \"#808080\" } : null\r\n        }\r\n        onClick={() => {\r\n          setStatus(\"Solve\");\r\n          createNewGrid(grid, dispatch);\r\n        }}\r\n      >\r\n        New Game\r\n      </Button>\r\n      <Row>\r\n        <DummyButton>\r\n          Steps Remain: {listCount ? listCount : \"Unknown\"}\r\n        </DummyButton>\r\n        <DummyButton onClick={() => setGuidelineFlag(!guidelineFlag)}>\r\n          {!guidelineFlag ? \"Show Guidelines\" : \"Hide Guidlines\"}\r\n        </DummyButton>\r\n      </Row>\r\n      {guidelineFlag && (\r\n        <Row>\r\n          <SideMessage>\r\n            <strong>Solve button</strong>{\" \"}\r\n            <p>\r\n              This will start the game. You cannot interrupt the game in the\r\n              middle. You can start a new game only after the current game is\r\n              finished.\r\n            </p>\r\n            <strong>New Game</strong>{\" \"}\r\n            <p>\r\n              Every time you click \"New Game\" button, a new setting of numbers\r\n              will show to play with. You can then click \"Solve\" button to start\r\n              the game. The button \"New Game\" will be disabled if a game is\r\n              already in progress. You can also click on a block to insert numbers \r\n              from your keyboard and play the game. Press ESC to undo.\r\n            </p>\r\n            <strong>Step Remain</strong>{\" \"}\r\n            <p>\r\n              It is here to show the steps remaining before your current game\r\n              finishes.\r\n            </p>\r\n          </SideMessage>\r\n        </Row>\r\n      )}\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default Backtrack;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport GlobalStyle from './styles/GlobalStyle'\r\nimport Content from './styles/Content'\r\nimport Title from './styles/Title'\r\nimport Card from './styles/Card'\r\nimport Grid from './components/Grid'\r\nimport theme from './styles/theme'\r\nimport { ThemeProvider } from 'styled-components'\r\nimport {Provider} from 'react-redux'\r\nimport configureStore from './redux/store'\r\nimport Backtrack from './components/Backtrack';\r\n\r\nconst store = configureStore()\r\nReactDOM.render(\r\n  <ThemeProvider theme= {theme}>\r\n   <GlobalStyle/><Provider store= {store}><Content><Title>Sudoku</Title><Card><Grid/></Card><Backtrack/></Content></Provider>\r\n</ThemeProvider>\r\n  ,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}