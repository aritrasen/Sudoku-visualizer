{"version":3,"sources":["serviceWorker.js","styles/GlobalStyle.js","styles/Content.js","styles/Title.js","styles/Card.js","styles/BlockContainer.js","styles/InputContainer.js","redux/action.js","hooks/useKeypress.js","components/Block.js","styles/Container.js","styles/Row.js","components/Grid.js","styles/theme.js","utils/shuffle.js","utils/checkRow.js","utils/checkSquare.js","utils/checkCol.js","utils/createNewGrid.js","utils/solveGridSol.js","utils/removeElems.js","redux/reducer.js","redux/store.js","utils/backTrack.js","styles/Button.js","components/Backtrack.js","index.js"],"names":["Boolean","window","location","hostname","match","GlobalStyle","createGlobalStyle","theme","css","colors","background","black","Content","styled","div","Title","h1","white","Card","BlockContainer","props","chosen","lightBlue","transition","Input","input","createGrid","type","useKeyPress","targetKey","useState","keyPressed","setKeyPressed","downHandler","key","upHandler","useEffect","addEventListener","removeEventListener","Block","rowIndex","colIndex","isInputActive","setIsInputActive","inputValue","setInputValue","val","useSelector","state","grid","solVal","solGrid","activeRow","activeCol","isEditable","selected","console","log","dispatch","useDispatch","enter","useKeypress","esc","payload","row","col","value","onChange","e","parseInt","target","onClick","Container","Row","Grid","create","useCallback","Array","map","_","blue","shuffle","a","i","length","j","Math","floor","random","checkRow","rowIdx","includes","checkSquare","colIdx","startR","startC","checkCol","fill","createNewGrid","backtrackNewGrid","index","onenine","vals","solveGridSol","counter","pos","count","removeElems","positions","backup","reducer","action","fullGrid","newGrid","slice","gridNew","alert","configureStore","intialState","store","createStore","devToolsEnhancer","backTrack","arr","push","Button","button","Backtrack","lists","actionLists","setTimeout","myListDispatch","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.f30c550b.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { createGlobalStyle, css } from 'styled-components'\r\n\r\nconst GlobalStyle =  createGlobalStyle`\r\n  ${({ theme }) => css`\r\n    html {\r\n      height: 100%;\r\n\r\n      body {\r\n        display: flex;\r\n        flex-direction: column;\r\n        height: 100%;\r\n        margin: 0;\r\n\r\n        #root {\r\n          background: ${theme.colors.background};\r\n          color: ${theme.colors.black};\r\n          display: flex;\r\n          font-family: sans-serif;\r\n          height: 100%;\r\n          justify-content: center;\r\n          padding: 15px;\r\n        }\r\n      }\r\n    }\r\n  `}\r\n`\r\nexport default GlobalStyle;","import styled from 'styled-components'\r\n\r\nconst Content = styled.div`\r\n  max-width: 500px;\r\n  display: flex;\r\n  flex: 1;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n`\r\n\r\nexport default Content;\r\n","import styled, { css } from 'styled-components'\r\n\r\nconst Title = styled.h1`\r\n  ${({ theme }) => css`\r\n    color: ${theme.colors.white};\r\n    margin-top: 0;\r\n    text-align: center;\r\n  `}\r\n`\r\nexport default Title;","import styled, { css } from 'styled-components'\r\n\r\nconst Card = styled.div`\r\n  ${({ theme }) => css`\r\n    background-color: ${theme.colors.white};\r\n    border-radius: 15px;\r\n    display: flex;\r\n    flex: 1;\r\n    flex-direction: column;\r\n    max-height: fit-content;\r\n    padding: 15px;\r\n  `}\r\n`\r\n\r\nexport default Card;\r\n","import styled, { css } from 'styled-components'\r\n\r\nconst BlockContainer = styled.div`\r\n  ${({ theme }) => css`\r\n    align-items: center;\r\n    background-color: ${(props) => props.chosen ?  theme.colors.lightBlue: theme.colors.white };\r\n    border: solid 1px ${theme.colors.black};\r\n    cursor: pointer;\r\n    display: flex;\r\n    flex-grow: 1;\r\n    flex-shrink: 0;\r\n    flex-basis: 0;\r\n    font-size: 20px;\r\n    font-weight: bold;\r\n    height: auto;\r\n    justify-content: center;\r\n    transition: ${theme.transition};\r\n    user-select: none;\r\n\r\n    &:before {\r\n      padding-top: 100%;\r\n      content: '';\r\n      float: left;\r\n    }\r\n\r\n    &:hover {\r\n      background-color: ${theme.colors.lightBlue};\r\n    }\r\n  `}\r\n`\r\nexport default BlockContainer;","import styled, { css } from 'styled-components'\r\n\r\nconst Input = styled.input`\r\n${({ theme }) => css`\r\nbackground-color: ${theme.colors.white};\r\nborder: solid 1px ${theme.colors.black};\r\nheight:50px;\r\nwidth:50px;\r\nfont-size: 20px;\r\ndisplay: flex;\r\nfont-weight: bold;\r\nheight: auto;\r\ntransition: ${theme.transition};\r\nuser-select: no\r\n`}\r\n`\r\nexport default Input;","const createGrid = ()=> ({type: \"CREATE_GRID\"})\r\nconst changeGrid = (props) => ({type: \"CHANGE_GRID\", payload:{row: props.row,col: props.col,val: props.val}})\r\nconst solveGrid = (props) => ({type: \"BACKTRACK\", payload:{row: props.row,col: props.col,val: props.val}})\r\n\r\nexport default createGrid;\r\nexport {changeGrid};\r\nexport {solveGrid};","// hook from https://usehooks.com/useKeyPress/\r\nimport { useState, useEffect } from \"react\";\r\n\r\n// Hook\r\nfunction useKeyPress(targetKey) {\r\n  // State for keeping track of whether key is pressed\r\n  const [keyPressed, setKeyPressed] = useState(false);\r\n\r\n  // If pressed key is our target key then set to true\r\n  function downHandler({ key }) {\r\n    if (key === targetKey) {\r\n      setKeyPressed(true);\r\n    }\r\n  }\r\n\r\n  // If released key is our target key then set to false\r\n  const upHandler = ({ key }) => {\r\n    if (key === targetKey) {\r\n      setKeyPressed(false);\r\n    }\r\n  };\r\n\r\n  // Add event listeners\r\n  useEffect(() => {\r\n    window.addEventListener(\"keydown\", downHandler);\r\n    window.addEventListener(\"keyup\", upHandler);\r\n    // Remove event listeners on cleanup\r\n    return () => {\r\n      window.removeEventListener(\"keydown\", downHandler);\r\n      window.removeEventListener(\"keyup\", upHandler);\r\n    };\r\n  }, []); // Empty array ensures that effect is only run on mount and unmount\r\n\r\n  return keyPressed;\r\n}\r\n\r\nexport default useKeyPress;","import React,{useState,useEffect} from 'react'\r\nimport BlockContainer from '../styles/BlockContainer'\r\nimport Input from '../styles/InputContainer'\r\nimport { useSelector } from 'react-redux'\r\nimport { useDispatch } from 'react-redux'\r\nimport {changeGrid} from '../redux/action'\r\nimport useKeypress from '../hooks/useKeypress'\r\n\r\nconst Block = ({ rowIndex, colIndex }) => {\r\n  const [isInputActive, setIsInputActive] = useState(false)\r\n  const [inputValue, setInputValue] = useState(\"\")\r\n  const val = useSelector(state=> state.grid? state.grid[rowIndex][colIndex]:0)\r\n  const solVal = useSelector(state=> state.solGrid? state.solGrid[rowIndex][colIndex]:1)\r\n  const activeRow = useSelector(state => state.activeRow)\r\n  const activeCol = useSelector(state => state.activeCol)\r\n  const isEditable = solVal===0\r\n  const selected = activeRow===rowIndex&&activeCol===colIndex\r\n  console.log(\"row\",rowIndex,\"col\",colIndex,\"edit\",isEditable)\r\n  console.log(\"activeRow\", activeRow, \"activeCol\",activeCol,\"selected\",selected)\r\n  const dispatch = useDispatch()\r\n  const enter = useKeypress('Enter');\r\n  const esc = useKeypress('Escape');\r\n  useEffect(() => {\r\n\r\n    if (isInputActive) {\r\n\r\n      // if Enter is pressed, save the text and case the editor\r\n\r\n      if (enter) {\r\n\r\n        \r\n        dispatch(changeGrid({row:rowIndex,col:colIndex, val:inputValue}))\r\n        setIsInputActive(false);\r\n\r\n      }\r\n\r\n      // if Escape is pressed, revert the text and close the editor\r\n\r\n      if (esc) {\r\n\r\n        \r\n\r\n        setIsInputActive(false);\r\n\r\n      }\r\n\r\n    }\r\n\r\n  }, [enter, esc]);\r\n  return isInputActive?<Input type='number' value={inputValue}\r\n\r\n  onChange={(e) => setInputValue(parseInt(e.target.value))}/>:<BlockContainer chosen = {selected} onClick= {()=>isEditable?setIsInputActive(!isInputActive): null}>{val===0 ? \"\":val}</BlockContainer>\r\n}\r\n\r\nexport default Block","import styled from 'styled-components'\r\n\r\nconst Container = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  margin: 10px 0;\r\n`\r\n\r\n\r\nexport default Container;","import styled, { css } from 'styled-components'\r\n\r\nconst Row = styled.div`\r\n  ${({ theme }) => css`\r\n    display: flex;\r\n    flex-flow: row;\r\n\r\n    &:nth-child(1) {\r\n      div {\r\n        border-top: solid 4px ${theme.colors.black};\r\n      }\r\n    }\r\n    &:nth-child(3),\r\n    &:nth-child(6) {\r\n      div {\r\n        border-bottom: solid 3px ${theme.colors.black};\r\n      }\r\n    }\r\n    &:nth-child(9) {\r\n      border-bottom: solid 4px ${theme.colors.black};\r\n    }\r\n\r\n    div {\r\n      &:nth-child(1) {\r\n        border-left: solid 4px ${theme.colors.black};\r\n      }\r\n      &:nth-child(3),\r\n      &:nth-child(6),\r\n      &:nth-child(9) {\r\n        border-right: solid 4px ${theme.colors.black};\r\n      }\r\n      &:nth-child(4),\r\n      &:nth-child(7) {\r\n        border-left: none;\r\n      }\r\n    }\r\n  `}`\r\n\r\n  export default Row;","import React,{useCallback, useEffect} from 'react'\r\n\r\nimport Block from './Block'\r\nimport Container from '../styles/Container'\r\nimport Row from '../styles/Row'\r\nimport { useDispatch } from 'react-redux'\r\nimport createGrid from '../redux/action'\r\n\r\nconst Grid = ()=> {\r\n  // Other stuff on the way\r\n  console.log(\"I am being called\")\r\n  const dispatch = useDispatch()\r\n  const create = useCallback(() => dispatch(createGrid()),[dispatch])\r\n  useEffect(() => {\r\n    create()\r\n  })\r\n  return (\r\n    <Container>\r\n      {[...Array(9)].map((_, rowIndex) => (\r\n          <Row >\r\n            {[...Array(9)].map((_, colIndex) => (\r\n                <Block colIndex={colIndex} rowIndex={rowIndex} />\r\n              ))\r\n            }\r\n          </Row>\r\n        ))\r\n      }\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default Grid;","const theme = {\r\n    colors: {\r\n      background: 'radial-gradient(#282c34cc, #282c34)',\r\n      black: '#282c34',\r\n      blue: '#a0e9fd',\r\n      lightBlue: '#caf3fe',\r\n      white: 'white',\r\n    },\r\n    transition: '0.01s',\r\n  }\r\n\r\nexport default theme;  ","function shuffle(a) {\r\n    for (let i = a.length - 1; i > 0; i--) {\r\n        const j = Math.floor(Math.random() * (i + 1));\r\n        [a[i], a[j]] = [a[j], a[i]];\r\n    }\r\n    return a;\r\n}\r\n\r\nexport default shuffle;","function checkRow(grid,rowIdx,val)\r\n{\r\n     return !grid[rowIdx].includes(val)\r\n}\r\n\r\nexport default checkRow;","function checkSquare(grid,rowIdx,colIdx,val)\r\n{\r\n       let startR = Math.floor(rowIdx/3)*3\r\n       let startC= Math.floor(colIdx/3)*3\r\n       for(let i=0; i<=2; i++)\r\n       for(let j=0; j<=2; j++)\r\n       {\r\n            if(grid[startR+i][startC+j]===val)\r\n              return false\r\n       }\r\n\r\n       return true\r\n}\r\n\r\nexport default checkSquare;","function checkCol(grid,colIdx,val)\r\n{\r\n     const col = Array(9).fill(0)\r\n     for(let i=0; i<9;i++)\r\n       col[i] = grid[i][colIdx]\r\n     return !col.includes(val) \r\n}\r\n\r\nexport default checkCol;","import shuffle from './shuffle'\r\nimport checkRow from './checkRow'\r\nimport checkSquare from './checkSquare'\r\nimport checkCol from './checkCol'\r\n\r\nfunction backtrackNewGrid(grid, index)\r\n{    if(index===81)\r\n        return true; \r\n     //console.log(index)\r\n     const onenine = Array(9).fill(0)\r\n     //console.log(\"back tracking\")\r\n     for (let i = 0; i <9; i++) {\r\n           onenine[i]= i+1\r\n           //console.log(vals[i])\r\n        }\r\n     const vals = shuffle(onenine)   \r\n     const row = Math.floor(index/9)\r\n     const col = index%9 \r\n     \r\n    \r\n               \r\n     for(let i=0; i<vals.length; i++)\r\n     {\r\n         \r\n         \r\n\r\n          if(checkCol(grid,col,vals[i])&&checkRow(grid,row,vals[i])&&checkSquare(grid,row,col,vals[i]))\r\n          {\r\n           //if(row===1&&col===0)\r\n             //console.log(\"check\"+grid[0][0]+grid[0][1]+grid[0][2]+grid[0][3]+vals[i])\r\n\r\n          grid[row][col] = vals[i]\r\n          if(backtrackNewGrid(grid,index+1))\r\n               return true\r\n          grid[row][col] =0     \r\n          }     \r\n     }\r\n      \r\n    return false\r\n}\r\n\r\nfunction createNewGrid()\r\n{\r\n     const grid =  [...Array(9)].map( ()=> [...Array(9).fill(0)])\r\n     backtrackNewGrid(grid,0)\r\n     return grid\r\n\r\n}\r\n\r\nexport default createNewGrid;","import checkRow from './checkRow'\r\nimport checkSquare from './checkSquare'\r\nimport checkCol from './checkCol'\r\n\r\nfunction solveGridSol(grid, index, counter)\r\n{     let pos = -1\r\n      for(let i= index; i<81; i++)\r\n      {\r\n          \r\n          const row = Math.floor(index/9) \r\n          const col = index%9\r\n          if(grid[row][col]===0)\r\n           {\r\n               pos = i\r\n               break\r\n           }    \r\n           \r\n      }\r\n      if(pos===-1)\r\n      {\r\n         counter.count++\r\n         return\r\n      }\r\n      const row = Math.floor(pos/9) \r\n      const col = pos%9\r\n      \r\n\r\n    for(let i=1; i<=9; i++)\r\n    {\r\n          if(checkCol(grid,col,i)&&checkRow(grid,row,i)&&checkSquare(grid,row,col,i))\r\n          {\r\n              grid[row][col] = i;\r\n              solveGridSol(grid,index+1,counter)\r\n              if(counter.count===2)\r\n                 break\r\n              grid[row][col] = 0\r\n          }\r\n    }    \r\n\r\n}\r\n\r\nexport default solveGridSol;","import shuffle from './shuffle'\r\nimport solveGridSol from './solveGridSol'\r\nfunction removeElems(grid)\r\n{\r\n    const positions = Array(81).fill(0)\r\n     for (let i = 0; i <81; i++) {\r\n           positions[i]= i+1\r\n        }\r\n    shuffle(positions)\r\n    for(let i=0 ; i<81; i++)\r\n    {\r\n        const row = Math.floor(i/9)\r\n        const col = i%9\r\n        let backup = grid[row][col]\r\n        grid[row][col] = 0\r\n        const counter = {count:0}\r\n        solveGridSol(grid,i,counter)\r\n        if(counter.count===2)\r\n        {\r\n               grid[row][col] = backup\r\n        }\r\n\r\n\r\n    }\r\n    \r\n    return grid\r\n}\r\n\r\nexport default removeElems;","import createNewGrid from '../utils/createNewGrid.js'\r\nimport createGrid from './action.js'\r\nimport removeElems from '../utils/removeElems.js'\r\nimport checkCol from '../utils/checkCol.js'\r\nimport checkRow from '../utils/checkRow.js'\r\nimport checkSquare from '../utils/checkSquare.js'\r\nfunction reducer( state={}, action)\r\n{\r\n    switch(action.type)\r\n    {\r\n        case \"CREATE_GRID\" : \r\n        let fullGrid = createNewGrid()\r\n        let newGrid = removeElems(fullGrid)\r\n        return{ ...state, grid: newGrid.slice().map( function(row){ return row.slice(); }),solGrid:newGrid.slice().map( function(row){ return row.slice(); }), activeRow:9,activeCol:9 }\r\n        case \"CHANGE_GRID\":{ \r\n                            let gridNew = [...state.grid]\r\n                            let solGrid = [...state.solGrid]\r\n\r\n                            let row = action.payload.row\r\n                            let col = action.payload.col\r\n                            let val = action.payload.val\r\n                            console.log(action.payload.row)\r\n                            if(val===0)\r\n                            {\r\n                                gridNew[row][col] = val\r\n                                console.log(\"Action\",solGrid[row][col])\r\n                                return {...state, grid: gridNew, solGrid: solGrid} \r\n                            }\r\n                            else if( checkCol(gridNew,col,val)&&checkRow(gridNew,row,val)&&checkSquare(gridNew,row,col,val))\r\n                            {\r\n                                   gridNew[row][col] = val\r\n                                   console.log(\"Action\",solGrid[row][col])\r\n                                   return {...state, grid: gridNew, solGrid: solGrid, activeRow: 9, activeCol: 9}   \r\n                            }\r\n                            else\r\n                            {\r\n                                alert(\"Incorrect Option\")\r\n                                return {...state, grid: gridNew, solGrid: solGrid,activeRow:9 , activeCol: 9} \r\n                            }\r\n                            \r\n                        }\r\n        case \"BACKTRACK\": { \r\n        let gridNew = state.grid.slice().map( function(row){ return row.slice(); })\r\n        let solGrid = state.solGrid.slice().map( function(row){ return row.slice(); })\r\n\r\n        let row = action.payload.row\r\n        let col = action.payload.col\r\n        let val = action.payload.val\r\n        console.log(action.payload.row)\r\n        gridNew[row][col] = val\r\n        return {...state, grid: gridNew, solGrid: solGrid,activeRow:row,activeCol:col} \r\n         }                      \r\n        default:\r\n            return state\r\n    }\r\n} \r\n\r\nexport default reducer;","import {createStore,applyMiddleware} from 'redux'\r\nimport { devToolsEnhancer  } from 'redux-devtools-extension'\r\nimport reducer from './reducer'\r\n\r\n\r\nfunction configureStore(intialState={})\r\n{\r\n    const store = createStore(reducer, intialState,devToolsEnhancer())\r\n    return store\r\n}\r\n\r\nexport default configureStore;","import React,{useState,useEffect} from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { useDispatch } from 'react-redux'\r\nimport {changeGrid} from '../redux/action'\r\nimport checkRow from './checkRow'\r\nimport checkSquare from './checkSquare'\r\nimport checkCol from './checkCol'\r\n\r\nfunction backTrack(grid,index,arr)\r\n{\r\n    let pos = -1\r\n    \r\n    \r\n    for(let i= index; i<81; i++)\r\n    {\r\n        \r\n        let row = Math.floor(i/9) \r\n        let col = i%9\r\n\r\n        if(grid[row][col]===0)\r\n         {\r\n             pos = i\r\n             break\r\n         }    \r\n         \r\n    }\r\n    if(pos===-1)\r\n    {\r\n       return true\r\n    }\r\n    const row = Math.floor(pos/9) \r\n    const col = pos%9\r\n    \r\n\r\n  for(let i=1; i<=9; i++)\r\n  {\r\n        if(checkCol(grid,col,i)&&checkRow(grid,row,i)&&checkSquare(grid,row,col,i))\r\n        {\r\n            grid[row][col] = i\r\n            arr.push({row:row,col:col,val:i})\r\n            if(backTrack(grid,index+1,arr))\r\n            {\r\n                return true\r\n            }\r\n            else\r\n            {\r\n            grid[row][col] =0\r\n            arr.push({row:row,col:col,val:0})\r\n            }\r\n        }\r\n  }\r\n  return false    \r\n}\r\n\r\nexport default backTrack;","import styled, { css } from 'styled-components'\r\n\r\nconst Button = styled.button`\r\n  ${({ theme }) => css`\r\n    align-items: center;\r\n    background-color: ${theme.colors.black};\r\n    border: 2px solid ${theme.colors.black};\r\n    border-radius: 4px;\r\n    color: ${theme.colors.white};\r\n    cursor: pointer;\r\n    display: flex;\r\n    flex; 1;\r\n    font-size: 16px;\r\n    font-weight: bold;\r\n    height: 40px;\r\n    justify-content: center;\r\n    margin: 4px 2px;\r\n    min-height: 40px;\r\n    opacity: 0.9;\r\n    padding: 0;\r\n    transition: ${theme.transition};\r\n\r\n    &:focus {\r\n      border-color: ${theme.colors.blue};\r\n      outline: none;\r\n    }\r\n\r\n    &:hover {\r\n      opacity: 0.6;\r\n    }\r\n  `}\r\n`\r\nexport default Button;","import React from 'react'\r\nimport backTrack from '../utils/backTrack'\r\nimport { useDispatch } from 'react-redux'\r\nimport { useSelector } from 'react-redux'\r\nimport {solveGrid} from '../redux/action'\r\n\r\nimport Button from '../styles/Button'\r\nfunction myListDispatch(grid,dispatch) {\r\n    const lists = []\r\n    backTrack(grid,0,lists)\r\n    const actionLists = lists.map(a=> solveGrid(a))\r\n    for(let i=0; i<actionLists.length;i++)\r\n    {\r\n      setTimeout(() =>  dispatch(actionLists[i]), 60000)\r\n    }\r\n    \r\n    \r\n  }\r\nconst Backtrack = ()=> {\r\n    \r\n    const grid = useSelector(state=> state.grid?state.grid.slice().map( function(row){ return row.slice(); }):null)\r\n    const dispatch  = useDispatch()\r\n    return(<Button onClick={() => myListDispatch(grid,dispatch)} > Solve </Button>)\r\n}\r\n\r\nexport default Backtrack;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\nimport GlobalStyle from './styles/GlobalStyle'\nimport Content from './styles/Content'\nimport Title from './styles/Title'\nimport Card from './styles/Card'\nimport Grid from './components/Grid'\nimport theme from './styles/theme'\nimport { ThemeProvider } from 'styled-components'\nimport {Provider} from 'react-redux'\nimport configureStore from './redux/store'\nimport Backtrack from './components/Backtrack';\n\nconst store = configureStore()\nReactDOM.render(\n  <ThemeProvider theme= {theme}>\n   <GlobalStyle/><Provider store= {store}><Content><Title>Sudoku</Title><Card><Grid/></Card><Backtrack/></Content></Provider>\n</ThemeProvider>\n  ,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}