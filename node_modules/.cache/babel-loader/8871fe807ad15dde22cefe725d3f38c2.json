{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\aritrasen\\\\Documents\\\\react_projects\\\\soduku\\\\src\\\\components\\\\Backtrack.js\";\nimport React from 'react';\nimport backTrack from '../utils/backTrack';\nimport { useDispatch } from 'react-redux';\nimport { useSelector } from 'react-redux';\nimport { changeGrid } from '../redux/action';\nimport Button from '../styles/Button';\n\nfunction myListDispatch(grid, dispatch) {\n  const lists = [];\n  backTrack(grid, 0, lists);\n  const actionLists = lists.map(a => solveGrid(a));\n\n  for (let i = 0; i < actionLists.length; i++) {\n    setTimeout(() => dispatch(actionLists[i]), 20000);\n  }\n}\n\nconst Backtrack = () => {\n  const grid = useSelector(state => state.grid ? state.grid.slice().map(function (row) {\n    return row.slice();\n  }) : null);\n  const dispatch = useDispatch();\n  return /*#__PURE__*/React.createElement(Button, {\n    onClick: () => myListDispatch(grid, dispatch),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 12\n    }\n  }, \" Solve \");\n};\n\nexport default Backtrack;","map":{"version":3,"sources":["C:/Users/aritrasen/Documents/react_projects/soduku/src/components/Backtrack.js"],"names":["React","backTrack","useDispatch","useSelector","changeGrid","Button","myListDispatch","grid","dispatch","lists","actionLists","map","a","solveGrid","i","length","setTimeout","Backtrack","state","slice","row"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,oBAAtB;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAAQC,UAAR,QAAyB,iBAAzB;AAEA,OAAOC,MAAP,MAAmB,kBAAnB;;AACA,SAASC,cAAT,CAAwBC,IAAxB,EAA6BC,QAA7B,EAAuC;AACnC,QAAMC,KAAK,GAAG,EAAd;AACAR,EAAAA,SAAS,CAACM,IAAD,EAAM,CAAN,EAAQE,KAAR,CAAT;AACA,QAAMC,WAAW,GAAGD,KAAK,CAACE,GAAN,CAAUC,CAAC,IAAGC,SAAS,CAACD,CAAD,CAAvB,CAApB;;AACA,OAAI,IAAIE,CAAC,GAAC,CAAV,EAAaA,CAAC,GAACJ,WAAW,CAACK,MAA3B,EAAkCD,CAAC,EAAnC,EACA;AACEE,IAAAA,UAAU,CAAC,MAAOR,QAAQ,CAACE,WAAW,CAACI,CAAD,CAAZ,CAAhB,EAAkC,KAAlC,CAAV;AACD;AAGF;;AACH,MAAMG,SAAS,GAAG,MAAK;AAEnB,QAAMV,IAAI,GAAGJ,WAAW,CAACe,KAAK,IAAGA,KAAK,CAACX,IAAN,GAAWW,KAAK,CAACX,IAAN,CAAWY,KAAX,GAAmBR,GAAnB,CAAwB,UAASS,GAAT,EAAa;AAAE,WAAOA,GAAG,CAACD,KAAJ,EAAP;AAAqB,GAA5D,CAAX,GAAyE,IAAlF,CAAxB;AACA,QAAMX,QAAQ,GAAIN,WAAW,EAA7B;AACA,sBAAO,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAE,MAAMI,cAAc,CAACC,IAAD,EAAMC,QAAN,CAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAP;AACH,CALD;;AAOA,eAAeS,SAAf","sourcesContent":["import React from 'react'\r\nimport backTrack from '../utils/backTrack'\r\nimport { useDispatch } from 'react-redux'\r\nimport { useSelector } from 'react-redux'\r\nimport {changeGrid} from '../redux/action'\r\n\r\nimport Button from '../styles/Button'\r\nfunction myListDispatch(grid,dispatch) {\r\n    const lists = []\r\n    backTrack(grid,0,lists)\r\n    const actionLists = lists.map(a=> solveGrid(a))\r\n    for(let i=0; i<actionLists.length;i++)\r\n    {\r\n      setTimeout(() =>  dispatch(actionLists[i]), 20000)\r\n    }\r\n    \r\n    \r\n  }\r\nconst Backtrack = ()=> {\r\n    \r\n    const grid = useSelector(state=> state.grid?state.grid.slice().map( function(row){ return row.slice(); }):null)\r\n    const dispatch  = useDispatch()\r\n    return(<Button onClick={() => myListDispatch(grid,dispatch)} > Solve </Button>)\r\n}\r\n\r\nexport default Backtrack;"]},"metadata":{},"sourceType":"module"}