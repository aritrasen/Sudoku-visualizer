{"ast":null,"code":"import shuffle from './shuffle';\nimport solveGridSol from './solveGridSol';\n\nfunction removeElems(grid) {\n  const positions = Array(81).fill(0);\n\n  for (let i = 0; i < 81; i++) {\n    positions[i] = i + 1;\n  }\n\n  shuffle(positions);\n\n  for (let i = 0; i < 81; i++) {\n    const row = Math.floor(i / 9);\n    const col = i % 9;\n    let backup = grid[row][col];\n    grid[row][col] = 0;\n    const counter = {\n      count: 0\n    };\n    solveGridSol(grid, i, counter);\n\n    if (counter.count === 2) {\n      grid[row][col] = backup;\n    }\n  }\n\n  return grid;\n}\n\nexport default removeElems;","map":{"version":3,"sources":["C:/Users/aritrasen/Documents/react_projects/sudoku/src/utils/removeElems.js"],"names":["shuffle","solveGridSol","removeElems","grid","positions","Array","fill","i","row","Math","floor","col","backup","counter","count"],"mappings":"AAAA,OAAOA,OAAP,MAAoB,WAApB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;;AACA,SAASC,WAAT,CAAqBC,IAArB,EACA;AACI,QAAMC,SAAS,GAAGC,KAAK,CAAC,EAAD,CAAL,CAAUC,IAAV,CAAe,CAAf,CAAlB;;AACC,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAE,EAAnB,EAAuBA,CAAC,EAAxB,EAA4B;AACtBH,IAAAA,SAAS,CAACG,CAAD,CAAT,GAAcA,CAAC,GAAC,CAAhB;AACF;;AACLP,EAAAA,OAAO,CAACI,SAAD,CAAP;;AACA,OAAI,IAAIG,CAAC,GAAC,CAAV,EAAcA,CAAC,GAAC,EAAhB,EAAoBA,CAAC,EAArB,EACA;AACI,UAAMC,GAAG,GAAGC,IAAI,CAACC,KAAL,CAAWH,CAAC,GAAC,CAAb,CAAZ;AACA,UAAMI,GAAG,GAAGJ,CAAC,GAAC,CAAd;AACA,QAAIK,MAAM,GAAGT,IAAI,CAACK,GAAD,CAAJ,CAAUG,GAAV,CAAb;AACAR,IAAAA,IAAI,CAACK,GAAD,CAAJ,CAAUG,GAAV,IAAiB,CAAjB;AACA,UAAME,OAAO,GAAG;AAACC,MAAAA,KAAK,EAAC;AAAP,KAAhB;AACAb,IAAAA,YAAY,CAACE,IAAD,EAAMI,CAAN,EAAQM,OAAR,CAAZ;;AACA,QAAGA,OAAO,CAACC,KAAR,KAAgB,CAAnB,EACA;AACOX,MAAAA,IAAI,CAACK,GAAD,CAAJ,CAAUG,GAAV,IAAiBC,MAAjB;AACN;AAGJ;;AAED,SAAOT,IAAP;AACH;;AAED,eAAeD,WAAf","sourcesContent":["import shuffle from './shuffle'\r\nimport solveGridSol from './solveGridSol'\r\nfunction removeElems(grid)\r\n{\r\n    const positions = Array(81).fill(0)\r\n     for (let i = 0; i <81; i++) {\r\n           positions[i]= i+1\r\n        }\r\n    shuffle(positions)\r\n    for(let i=0 ; i<81; i++)\r\n    {\r\n        const row = Math.floor(i/9)\r\n        const col = i%9\r\n        let backup = grid[row][col]\r\n        grid[row][col] = 0\r\n        const counter = {count:0}\r\n        solveGridSol(grid,i,counter)\r\n        if(counter.count===2)\r\n        {\r\n               grid[row][col] = backup\r\n        }\r\n\r\n\r\n    }\r\n    \r\n    return grid\r\n}\r\n\r\nexport default removeElems;"]},"metadata":{},"sourceType":"module"}