{"ast":null,"code":"function backtrackNewGrid(grid, index) {\n  if (index === 82) return true;\n  var vals = Array(9).fill(100);\n  console.log(\"back tracking\");\n\n  for (let i = 1; i <= 9; i++) {\n    vals[i - 1] = i;\n    console.log(\"a\");\n  }\n\n  for (let i = 0; i < vals.size; i++) {\n    let row = index / 9;\n    let col = index % 9;\n    grid[row][col] = vals[i];\n    console.log(vals[i]);\n    if (backtrackNewGrid(grid, index + 1)) return true;\n  }\n\n  return false;\n}\n\nfunction createNewGrid() {\n  const grid = [...Array(9)].map(() => [...Array(9).fill(0)]);\n  backtrackNewGrid(grid, 0);\n  return grid;\n}\n\nexport default createNewGrid;","map":{"version":3,"sources":["C:/Users/aritrasen/Documents/react_projects/soduku/src/utils/createNewGrid.js"],"names":["backtrackNewGrid","grid","index","vals","Array","fill","console","log","i","size","row","col","createNewGrid","map"],"mappings":"AAAA,SAASA,gBAAT,CAA0BC,IAA1B,EAAgCC,KAAhC,EACA;AAAK,MAAGA,KAAK,KAAG,EAAX,EACG,OAAO,IAAP;AAEH,MAAIC,IAAI,GAAGC,KAAK,CAAC,CAAD,CAAL,CAASC,IAAT,CAAc,GAAd,CAAX;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ;;AACA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,IAAI,CAArB,EAAwBA,CAAC,EAAzB,EAA6B;AACvBL,IAAAA,IAAI,CAACK,CAAC,GAAC,CAAH,CAAJ,GAAWA,CAAX;AACAF,IAAAA,OAAO,CAACC,GAAR,CAAY,GAAZ;AACF;;AACJ,OAAI,IAAIC,CAAC,GAAC,CAAV,EAAaA,CAAC,GAACL,IAAI,CAACM,IAApB,EAA0BD,CAAC,EAA3B,EACA;AACK,QAAIE,GAAG,GAAGR,KAAK,GAAC,CAAhB;AACA,QAAIS,GAAG,GAAGT,KAAK,GAAC,CAAhB;AACAD,IAAAA,IAAI,CAACS,GAAD,CAAJ,CAAUC,GAAV,IAAiBR,IAAI,CAACK,CAAD,CAArB;AACAF,IAAAA,OAAO,CAACC,GAAR,CAAYJ,IAAI,CAACK,CAAD,CAAhB;AACA,QAAGR,gBAAgB,CAACC,IAAD,EAAMC,KAAK,GAAC,CAAZ,CAAnB,EACK,OAAO,IAAP;AACT;;AAEF,SAAO,KAAP;AACH;;AAED,SAASU,aAAT,GACA;AACK,QAAMX,IAAI,GAAI,CAAC,GAAGG,KAAK,CAAC,CAAD,CAAT,EAAcS,GAAd,CAAmB,MAAK,CAAC,GAAGT,KAAK,CAAC,CAAD,CAAL,CAASC,IAAT,CAAc,CAAd,CAAJ,CAAxB,CAAd;AACAL,EAAAA,gBAAgB,CAACC,IAAD,EAAM,CAAN,CAAhB;AACA,SAAOA,IAAP;AAEJ;;AAED,eAAeW,aAAf","sourcesContent":["function backtrackNewGrid(grid, index)\r\n{    if(index===82)\r\n        return true;\r\n     \r\n     var vals = Array(9).fill(100)\r\n     console.log(\"back tracking\")\r\n     for (let i = 1; i <= 9; i++) {\r\n           vals[i-1]= i\r\n           console.log(\"a\")\r\n        }\r\n     for(let i=0; i<vals.size; i++)\r\n     {\r\n          let row = index/9\r\n          let col = index%9\r\n          grid[row][col] = vals[i]\r\n          console.log(vals[i])\r\n          if(backtrackNewGrid(grid,index+1))\r\n               return true\r\n     }\r\n\r\n    return false\r\n}\r\n\r\nfunction createNewGrid()\r\n{\r\n     const grid =  [...Array(9)].map( ()=> [...Array(9).fill(0)])\r\n     backtrackNewGrid(grid,0)\r\n     return grid\r\n\r\n}\r\n\r\nexport default createNewGrid;"]},"metadata":{},"sourceType":"module"}