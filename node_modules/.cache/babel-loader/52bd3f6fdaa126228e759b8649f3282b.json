{"ast":null,"code":"import checkRow from './checkRow';\nimport checkSquare from './checkSquare';\nimport checkCol from './checkCol';\n\nfunction solveGridSol(grid, index, counter) {\n  let pos = -1;\n\n  for (let i = index; i < 81; i++) {\n    const row = Math.floor(index / 9);\n    const col = index % 9;\n\n    if (grid[row][col] === 0) {\n      pos = i;\n      break;\n    }\n  }\n\n  if (pos === -1) {\n    counter.count++;\n    return;\n  }\n\n  const row = Math.floor(pos / 9);\n  const col = pos % 9;\n\n  for (let i = 1; i <= 9; i++) {\n    if (checkCol(grid, col, i) && checkRow(grid, row, i) && checkSquare(grid, row, col, i)) {\n      grid[row][col] = i;\n      solveGridSol(grid, index + 1, counter);\n      if (counter.count === 2) break;\n      grid[row][col] = 0;\n    }\n  }\n}\n\nexport default solveGridSol;","map":{"version":3,"sources":["C:/Users/aritrasen/Documents/react_projects/soduku/src/utils/solveGridSol.js"],"names":["checkRow","checkSquare","checkCol","solveGridSol","grid","index","counter","pos","i","row","Math","floor","col","count"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,YAArB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,QAAP,MAAqB,YAArB;;AAEA,SAASC,YAAT,CAAsBC,IAAtB,EAA4BC,KAA5B,EAAmCC,OAAnC,EACA;AAAM,MAAIC,GAAG,GAAG,CAAC,CAAX;;AACA,OAAI,IAAIC,CAAC,GAAEH,KAAX,EAAkBG,CAAC,GAAC,EAApB,EAAwBA,CAAC,EAAzB,EACA;AAEI,UAAMC,GAAG,GAAGC,IAAI,CAACC,KAAL,CAAWN,KAAK,GAAC,CAAjB,CAAZ;AACA,UAAMO,GAAG,GAAGP,KAAK,GAAC,CAAlB;;AACA,QAAGD,IAAI,CAACK,GAAD,CAAJ,CAAUG,GAAV,MAAiB,CAApB,EACC;AACIL,MAAAA,GAAG,GAAGC,CAAN;AACA;AACH;AAEL;;AACD,MAAGD,GAAG,KAAG,CAAC,CAAV,EACA;AACGD,IAAAA,OAAO,CAACO,KAAR;AACA;AACF;;AACD,QAAMJ,GAAG,GAAGC,IAAI,CAACC,KAAL,CAAWJ,GAAG,GAAC,CAAf,CAAZ;AACA,QAAMK,GAAG,GAAGL,GAAG,GAAC,CAAhB;;AAGF,OAAI,IAAIC,CAAC,GAAC,CAAV,EAAaA,CAAC,IAAE,CAAhB,EAAmBA,CAAC,EAApB,EACA;AACM,QAAGN,QAAQ,CAACE,IAAD,EAAMQ,GAAN,EAAUJ,CAAV,CAAR,IAAsBR,QAAQ,CAACI,IAAD,EAAMK,GAAN,EAAUD,CAAV,CAA9B,IAA4CP,WAAW,CAACG,IAAD,EAAMK,GAAN,EAAUG,GAAV,EAAcJ,CAAd,CAA1D,EACA;AACIJ,MAAAA,IAAI,CAACK,GAAD,CAAJ,CAAUG,GAAV,IAAiBJ,CAAjB;AACAL,MAAAA,YAAY,CAACC,IAAD,EAAMC,KAAK,GAAC,CAAZ,EAAcC,OAAd,CAAZ;AACA,UAAGA,OAAO,CAACO,KAAR,KAAgB,CAAnB,EACG;AACHT,MAAAA,IAAI,CAACK,GAAD,CAAJ,CAAUG,GAAV,IAAiB,CAAjB;AACH;AACN;AAEJ;;AAED,eAAeT,YAAf","sourcesContent":["import checkRow from './checkRow'\r\nimport checkSquare from './checkSquare'\r\nimport checkCol from './checkCol'\r\n\r\nfunction solveGridSol(grid, index, counter)\r\n{     let pos = -1\r\n      for(let i= index; i<81; i++)\r\n      {\r\n          \r\n          const row = Math.floor(index/9) \r\n          const col = index%9\r\n          if(grid[row][col]===0)\r\n           {\r\n               pos = i\r\n               break\r\n           }    \r\n           \r\n      }\r\n      if(pos===-1)\r\n      {\r\n         counter.count++\r\n         return\r\n      }\r\n      const row = Math.floor(pos/9) \r\n      const col = pos%9\r\n      \r\n\r\n    for(let i=1; i<=9; i++)\r\n    {\r\n          if(checkCol(grid,col,i)&&checkRow(grid,row,i)&&checkSquare(grid,row,col,i))\r\n          {\r\n              grid[row][col] = i;\r\n              solveGridSol(grid,index+1,counter)\r\n              if(counter.count===2)\r\n                 break\r\n              grid[row][col] = 0\r\n          }\r\n    }    \r\n\r\n}\r\n\r\nexport default solveGridSol;"]},"metadata":{},"sourceType":"module"}