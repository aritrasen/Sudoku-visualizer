{"ast":null,"code":"import React, { useState, useEffect } from 'react';\nimport { useSelector } from 'react-redux';\nimport { useDispatch } from 'react-redux';\nimport { changeGrid } from '../redux/action';\nimport checkRow from './checkRow';\nimport checkSquare from './checkSquare';\nimport checkCol from './checkCol';\n\nfunction backTrack(grid, index, arr) {\n  let pos = -1;\n\n  for (let i = index; i < 81; i++) {\n    let row = Math.floor(i / 9);\n    let col = i % 9;\n\n    if (grid[row][col] === 0) {\n      pos = i;\n      break;\n    }\n  }\n\n  if (pos === -1) {\n    return true;\n  }\n\n  const row = Math.floor(pos / 9);\n  const col = pos % 9;\n\n  for (let i = 1; i <= 9; i++) {\n    if (checkCol(grid, col, i) && checkRow(grid, row, i) && checkSquare(grid, row, col, i)) {\n      grid[row][col] = i;\n      arr.push({\n        row: row,\n        col: col,\n        val: i\n      });\n\n      if (backTrack(grid, index + 1, arr)) {\n        return true;\n      } else {\n        grid[row][col] = 0;\n        arr.push({\n          row: row,\n          col: col,\n          val: 0\n        });\n      }\n    }\n  }\n\n  return false;\n}\n\nexport default backTrack;","map":{"version":3,"sources":["C:/Users/aritrasen/Documents/react_projects/sudoku/src/utils/backTrack.js"],"names":["React","useState","useEffect","useSelector","useDispatch","changeGrid","checkRow","checkSquare","checkCol","backTrack","grid","index","arr","pos","i","row","Math","floor","col","push","val"],"mappings":"AAAA,OAAOA,KAAP,IAAcC,QAAd,EAAuBC,SAAvB,QAAuC,OAAvC;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAAQC,UAAR,QAAyB,iBAAzB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,QAAP,MAAqB,YAArB;;AAEA,SAASC,SAAT,CAAmBC,IAAnB,EAAwBC,KAAxB,EAA8BC,GAA9B,EACA;AACI,MAAIC,GAAG,GAAG,CAAC,CAAX;;AAGA,OAAI,IAAIC,CAAC,GAAEH,KAAX,EAAkBG,CAAC,GAAC,EAApB,EAAwBA,CAAC,EAAzB,EACA;AAEI,QAAIC,GAAG,GAAGC,IAAI,CAACC,KAAL,CAAWH,CAAC,GAAC,CAAb,CAAV;AACA,QAAII,GAAG,GAAGJ,CAAC,GAAC,CAAZ;;AAEA,QAAGJ,IAAI,CAACK,GAAD,CAAJ,CAAUG,GAAV,MAAiB,CAApB,EACC;AACIL,MAAAA,GAAG,GAAGC,CAAN;AACA;AACH;AAEL;;AACD,MAAGD,GAAG,KAAG,CAAC,CAAV,EACA;AACG,WAAO,IAAP;AACF;;AACD,QAAME,GAAG,GAAGC,IAAI,CAACC,KAAL,CAAWJ,GAAG,GAAC,CAAf,CAAZ;AACA,QAAMK,GAAG,GAAGL,GAAG,GAAC,CAAhB;;AAGF,OAAI,IAAIC,CAAC,GAAC,CAAV,EAAaA,CAAC,IAAE,CAAhB,EAAmBA,CAAC,EAApB,EACA;AACM,QAAGN,QAAQ,CAACE,IAAD,EAAMQ,GAAN,EAAUJ,CAAV,CAAR,IAAsBR,QAAQ,CAACI,IAAD,EAAMK,GAAN,EAAUD,CAAV,CAA9B,IAA4CP,WAAW,CAACG,IAAD,EAAMK,GAAN,EAAUG,GAAV,EAAcJ,CAAd,CAA1D,EACA;AACIJ,MAAAA,IAAI,CAACK,GAAD,CAAJ,CAAUG,GAAV,IAAiBJ,CAAjB;AACAF,MAAAA,GAAG,CAACO,IAAJ,CAAS;AAACJ,QAAAA,GAAG,EAACA,GAAL;AAASG,QAAAA,GAAG,EAACA,GAAb;AAAiBE,QAAAA,GAAG,EAACN;AAArB,OAAT;;AACA,UAAGL,SAAS,CAACC,IAAD,EAAMC,KAAK,GAAC,CAAZ,EAAcC,GAAd,CAAZ,EACA;AACI,eAAO,IAAP;AACH,OAHD,MAKA;AACAF,QAAAA,IAAI,CAACK,GAAD,CAAJ,CAAUG,GAAV,IAAgB,CAAhB;AACAN,QAAAA,GAAG,CAACO,IAAJ,CAAS;AAACJ,UAAAA,GAAG,EAACA,GAAL;AAASG,UAAAA,GAAG,EAACA,GAAb;AAAiBE,UAAAA,GAAG,EAAC;AAArB,SAAT;AACC;AACJ;AACN;;AACD,SAAO,KAAP;AACD;;AAED,eAAeX,SAAf","sourcesContent":["import React,{useState,useEffect} from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { useDispatch } from 'react-redux'\r\nimport {changeGrid} from '../redux/action'\r\nimport checkRow from './checkRow'\r\nimport checkSquare from './checkSquare'\r\nimport checkCol from './checkCol'\r\n\r\nfunction backTrack(grid,index,arr)\r\n{\r\n    let pos = -1\r\n    \r\n    \r\n    for(let i= index; i<81; i++)\r\n    {\r\n        \r\n        let row = Math.floor(i/9) \r\n        let col = i%9\r\n\r\n        if(grid[row][col]===0)\r\n         {\r\n             pos = i\r\n             break\r\n         }    \r\n         \r\n    }\r\n    if(pos===-1)\r\n    {\r\n       return true\r\n    }\r\n    const row = Math.floor(pos/9) \r\n    const col = pos%9\r\n    \r\n\r\n  for(let i=1; i<=9; i++)\r\n  {\r\n        if(checkCol(grid,col,i)&&checkRow(grid,row,i)&&checkSquare(grid,row,col,i))\r\n        {\r\n            grid[row][col] = i\r\n            arr.push({row:row,col:col,val:i})\r\n            if(backTrack(grid,index+1,arr))\r\n            {\r\n                return true\r\n            }\r\n            else\r\n            {\r\n            grid[row][col] =0\r\n            arr.push({row:row,col:col,val:0})\r\n            }\r\n        }\r\n  }\r\n  return false    \r\n}\r\n\r\nexport default backTrack;"]},"metadata":{},"sourceType":"module"}