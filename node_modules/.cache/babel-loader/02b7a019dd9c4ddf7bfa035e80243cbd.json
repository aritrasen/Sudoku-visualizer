{"ast":null,"code":"import shuffle from './shuffle';\nimport checkRow from './checkRow';\nimport checkSquare from './checkSquare';\nimport checkCol from './checkCol';\n\nfunction backtrackNewGrid(grid, index) {\n  if (index === 81) return true; //console.log(index)\n\n  const onenine = Array(9).fill(0); //console.log(\"back tracking\")\n\n  for (let i = 0; i < 9; i++) {\n    onenine[i] = i + 1; //console.log(vals[i])\n  }\n\n  const vals = shuffle(onenine);\n  const row = Math.floor(index / 9);\n  const col = index % 9;\n\n  for (let i = 0; i < vals.length; i++) {\n    if (checkCol(grid, col, vals[i]) && checkRow(grid, row, vals[i]) && checkSquare(grid, row, col, vals[i])) {\n      //if(row===1&&col===0)\n      //console.log(\"check\"+grid[0][0]+grid[0][1]+grid[0][2]+grid[0][3]+vals[i])\n      grid[row][col] = vals[i];\n      if (backtrackNewGrid(grid, index + 1)) return true;\n      grid[row][col] = 0;\n    }\n  }\n\n  return false;\n}\n\nfunction createNewGrid() {\n  const grid = [...Array(9)].map(() => [...Array(9).fill(0)]);\n  backtrackNewGrid(grid, 0);\n  return grid;\n}\n\nexport default createNewGrid;","map":{"version":3,"sources":["C:/Users/aritrasen/Documents/react_projects/soduku/src/utils/createNewGrid.js"],"names":["shuffle","checkRow","checkSquare","checkCol","backtrackNewGrid","grid","index","onenine","Array","fill","i","vals","row","Math","floor","col","length","createNewGrid","map"],"mappings":"AAAA,OAAOA,OAAP,MAAoB,WAApB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,QAAP,MAAqB,YAArB;;AAEA,SAASC,gBAAT,CAA0BC,IAA1B,EAAgCC,KAAhC,EACA;AAAK,MAAGA,KAAK,KAAG,EAAX,EACG,OAAO,IAAP,CADR,CAEK;;AACA,QAAMC,OAAO,GAAGC,KAAK,CAAC,CAAD,CAAL,CAASC,IAAT,CAAc,CAAd,CAAhB,CAHL,CAIK;;AACA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAE,CAAnB,EAAsBA,CAAC,EAAvB,EAA2B;AACrBH,IAAAA,OAAO,CAACG,CAAD,CAAP,GAAYA,CAAC,GAAC,CAAd,CADqB,CAErB;AACF;;AACJ,QAAMC,IAAI,GAAGX,OAAO,CAACO,OAAD,CAApB;AACA,QAAMK,GAAG,GAAGC,IAAI,CAACC,KAAL,CAAWR,KAAK,GAAC,CAAjB,CAAZ;AACA,QAAMS,GAAG,GAAGT,KAAK,GAAC,CAAlB;;AAIA,OAAI,IAAII,CAAC,GAAC,CAAV,EAAaA,CAAC,GAACC,IAAI,CAACK,MAApB,EAA4BN,CAAC,EAA7B,EACA;AAIK,QAAGP,QAAQ,CAACE,IAAD,EAAMU,GAAN,EAAUJ,IAAI,CAACD,CAAD,CAAd,CAAR,IAA4BT,QAAQ,CAACI,IAAD,EAAMO,GAAN,EAAUD,IAAI,CAACD,CAAD,CAAd,CAApC,IAAwDR,WAAW,CAACG,IAAD,EAAMO,GAAN,EAAUG,GAAV,EAAcJ,IAAI,CAACD,CAAD,CAAlB,CAAtE,EACA;AACC;AACE;AAEHL,MAAAA,IAAI,CAACO,GAAD,CAAJ,CAAUG,GAAV,IAAiBJ,IAAI,CAACD,CAAD,CAArB;AACA,UAAGN,gBAAgB,CAACC,IAAD,EAAMC,KAAK,GAAC,CAAZ,CAAnB,EACK,OAAO,IAAP;AACLD,MAAAA,IAAI,CAACO,GAAD,CAAJ,CAAUG,GAAV,IAAgB,CAAhB;AACC;AACL;;AAEF,SAAO,KAAP;AACH;;AAED,SAASE,aAAT,GACA;AACK,QAAMZ,IAAI,GAAI,CAAC,GAAGG,KAAK,CAAC,CAAD,CAAT,EAAcU,GAAd,CAAmB,MAAK,CAAC,GAAGV,KAAK,CAAC,CAAD,CAAL,CAASC,IAAT,CAAc,CAAd,CAAJ,CAAxB,CAAd;AACAL,EAAAA,gBAAgB,CAACC,IAAD,EAAM,CAAN,CAAhB;AACA,SAAOA,IAAP;AAEJ;;AAED,eAAeY,aAAf","sourcesContent":["import shuffle from './shuffle'\r\nimport checkRow from './checkRow'\r\nimport checkSquare from './checkSquare'\r\nimport checkCol from './checkCol'\r\n\r\nfunction backtrackNewGrid(grid, index)\r\n{    if(index===81)\r\n        return true; \r\n     //console.log(index)\r\n     const onenine = Array(9).fill(0)\r\n     //console.log(\"back tracking\")\r\n     for (let i = 0; i <9; i++) {\r\n           onenine[i]= i+1\r\n           //console.log(vals[i])\r\n        }\r\n     const vals = shuffle(onenine)   \r\n     const row = Math.floor(index/9)\r\n     const col = index%9 \r\n     \r\n    \r\n               \r\n     for(let i=0; i<vals.length; i++)\r\n     {\r\n         \r\n         \r\n\r\n          if(checkCol(grid,col,vals[i])&&checkRow(grid,row,vals[i])&&checkSquare(grid,row,col,vals[i]))\r\n          {\r\n           //if(row===1&&col===0)\r\n             //console.log(\"check\"+grid[0][0]+grid[0][1]+grid[0][2]+grid[0][3]+vals[i])\r\n\r\n          grid[row][col] = vals[i]\r\n          if(backtrackNewGrid(grid,index+1))\r\n               return true\r\n          grid[row][col] =0     \r\n          }     \r\n     }\r\n      \r\n    return false\r\n}\r\n\r\nfunction createNewGrid()\r\n{\r\n     const grid =  [...Array(9)].map( ()=> [...Array(9).fill(0)])\r\n     backtrackNewGrid(grid,0)\r\n     return grid\r\n\r\n}\r\n\r\nexport default createNewGrid;"]},"metadata":{},"sourceType":"module"}